/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> top = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if(root == null) return top;
        
        q.offer(root);
        while(!q.isEmpty()){
            int n = q.size();
            for(int i=0;i<n;i++)
            {
            TreeNode temp = q.remove();           
            if(i == (n-1)){
                top.add(temp.val);
            }
            if(temp.left != null) 
                q.offer(temp.left);
                
            if(temp.right != null) 
                q.offer(temp.right);
            }
                
        }
        return top;
        
    }
}
