/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) 
    {
        if(preorder.length==0) return null;
        TreeNode root = new TreeNode(preorder[0]);   
        for(int i=1;i<preorder.length;i++)
        {
            TreeNode node = new TreeNode(preorder[i]);          
            fitInBST(node,root);
        }
        
        return root;
    }
    void fitInBST(TreeNode node,TreeNode root)
    {
        if(node.val<root.val)
        {
            if(root.left == null) root.left = node;
            else fitInBST(node,root.left);
        }
        else if(node.val>root.val)
        {
            if(root.right == null) root.right = node;
            else fitInBST(node,root.right);
        }
    }
}
