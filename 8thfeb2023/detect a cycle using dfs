
class Solution {
     public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean[] vis = new boolean[V];
        for(int i=0;i<V;i++)  
            if(!vis[i] && dfs(i,-1,vis,adj))    return true;
        return false;

    }
    public boolean dfs(int node , int parent , boolean[] vis , ArrayList<ArrayList<Integer>> adj){
        if(vis[node])    return true;
        vis[node] = true;
        for(Integer adjNode : adj.get(node))
            if(adjNode!=parent && dfs(adjNode,node,vis,adj)) return true;

        return false;

    } 
}
